注册中心pom
<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>


application.yml
###项目端口号
server:
  port: 8080
eureka:
  instance:
  ###注册中心IP地址
    hostname: 127.0.0.1
  client:
  	###因为自己是注册中心，是否需要将自己注册给自己的注册中心（集群是需要为true）
    register-with-eureka: false
    ###自己是注册中心，不需要检索服务信息
    fetch-registry: false
    ###注册地址
    service-url:
      defaultZone: http://${eureka.instance.hos0tname}:${server.port}/eureka/
    ###测试时关闭自我保护机制，保证不可用服务及时剔除
   server:
   enable-self-preservation: false
   eviction-interval-timer-in-ms: 2000

其他项目application.yml
eureka:
  client:
    serviceUrl:
      ###当前服务注册到注册中心的eureka地址
      defaultZone: http://localhost:8080/eureka/
      ###需要将我的服务注册到注册中心上
      register-with-eureka: true
      ###检索服务信息
      fetch-registry: true
server:
  port: 8761
###注册到注册中心的别名
spring:
  application:
    name: eureka-client
###心跳检测与续约时间
###测试时将值设置小一点，保证关闭服务后注册中心能及时剔除服务
  instance:
###eureka客户端向服务端发送心跳的时间间隔，单位秒。
    lease-renewal-interval-in-seconds: 1
###eureka服务端在收到最后一次心跳之后等待时间，单位秒
    lease-expiration-duration-in-seconds: 2

会员、订单项目pom.xml
<parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.3.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
 
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <spring-cloud.version>Finchley.RELEASE</spring-cloud.version>
    </properties>
 
    <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
        <dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
</dependency>

<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-test</artifactId>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.springframework.cloud</groupId>
    <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
    <scope>test</scope>
</dependency>
<dependency>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-web</artifactId>
</dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

###springcloud feign 默认开启本地负载均衡
ribbon配置
ribbon
	###建立连接所用的时间，适用于网络状态正常的情况下去，两端连接所用的时间。
	ReadTimeout: 5000
	###建立连接后从服务器读取到可用资源的时间
	ConnectTimeout: 5000

断路器pom
<dependency>
	<groupId>org.springframework.cloud</groupId>
	<artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
</dependency>

###开启hystrix断路器
feign:
     hystrix:
       enabled: true


